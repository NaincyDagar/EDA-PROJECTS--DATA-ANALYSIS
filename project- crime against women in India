# PROJECT - CRIME AGAINST WOMEN IN INDIA 


import pandas as pd
import warnings
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline

crime= pd.read_csv('C:\\Users\\nainc\\OneDrive\\Desktop\\crimes_against_women_2001-2014.csv')

# Heads of DataFrame

crime.head()

# Cell Information

crime.info()

# Statistics of DataFrame

crime.describe().style.background_gradient(cmap='magma')

# List of Columns

crime.columns

# Unique Features

crime.nunique()

# Missing values

crime.isnull().sum()

# Count of each Crime

crime_counts = crime[['Rape', 'Dowry Deaths', 'Assault on women with intent to outrage her modesty',
                     'Insult to modesty of Women', 'Cruelty by Husband or his Relatives', 'Importation of Girls']].sum()
crime_counts_sorted = crime_counts.sort_values(ascending=False)

plt.figure(figsize=(10, 6))
ax = crime_counts_sorted.plot(kind='bar', color='skyblue', edgecolor='black')
plt.xlabel('Crime Type')
plt.ylabel('Total Occurrences')
plt.title('Total Occurrences of Each Crime Type')
plt.grid(True)

# Positioning the x-axis labels below the bars
ax.set_xticklabels(crime_counts_sorted.index, rotation=45, ha='right')

for i, count in enumerate(crime_counts_sorted):
    ax.text(i, count + 1000, str(count), ha='center', va='bottom', fontsize=10)

plt.tight_layout()
plt.show()

# Distribution of Highest Crime by Count

cruelty_data = crime['Cruelty by Husband or his Relatives']
plt.figure(figsize=(8, 6))
plt.hist(cruelty_data, bins=20, color='skyblue', edgecolor='black', density=True, alpha=0.7, label='Histogram')
sns.kdeplot(cruelty_data, color='red', label='KDE')
plt.xlabel('Cruelty by husband/relatives Cases')
plt.ylabel('Density')
plt.title('Distribution of Cruelty Cases')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()


# Count of Crimes Statewise

plt.figure(figsize=(12,6))
sns.countplot(data=crime,x=crime['STATE/UT'])
plt.title("Visualize the States in the data")
plt.xticks(rotation=90)
plt.show()

# Count of Crimes Yearwise

plt.figure(figsize=(12,6))
sns.countplot(data=crime,x=crime['Year'])
plt.title("Visualize the District in the data")
plt.xticks(rotation=90)
plt.show()

# Top 10 Districts with Highest Crime Rate

district_counts = crime['DISTRICT'].value_counts()
sorted_districts = district_counts.sort_values(ascending=False)
top_10_districts = sorted_districts.head(10)
sunset_palette = sns.color_palette("mako_r", n_colors=10) 
plt.figure(figsize=(10, 6))
plt.bar(top_10_districts.index, top_10_districts.values,color=sunset_palette)
plt.xlabel('Districts')
plt.ylabel('Count')
plt.title('Top 10 Districts with the Highest Crime Counts')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Average Number of Crime Cases in Each State

sunset_palette=sns.color_palette("deep", n_colors=10)
average_rape_by_state = crime.groupby('STATE/UT')['Cruelty by Husband or his Relatives'].mean()
plt.figure(figsize=(12, 6))
average_rape_by_state.plot(kind='bar',color=sunset_palette)
plt.xlabel('State')
plt.ylabel('Average Number of Cruelty Cases')
plt.title('Average Number of Cases by State')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

# Trend over the years

year_rape=crime.groupby('Year')['Rape'].sum().sort_values(ascending=False)
year_kid=crime.groupby('Year')['Kidnapping and Abduction'].sum().sort_values(ascending=False)
year_dowry=crime.groupby('Year')['Dowry Deaths'].sum().sort_values(ascending=False)
year_cruelty=crime.groupby('Year')['Cruelty by Husband or his Relatives'].sum().sort_values(ascending=False)
year_insult=crime.groupby('Year')['Insult to modesty of Women'].sum().sort_values(ascending=False)
year_assault=crime.groupby('Year')['Assault on women with intent to outrage her modesty'].sum().sort_values(ascending=False)
plt.figure(figsize=(5,3))
plt.plot(year_rape,label='Rape Cases')
plt.plot(year_kid,label='Kidnapping Cases')
plt.plot(year_dowry,label='Dowry Cases')
plt.plot(year_cruelty,label='Cruelty Cases')
plt.plot(year_insult,label='Insult Cases')
plt.plot(year_assault,label='Assault Cases')
plt.title("Year Wise Cases")
plt.legend(loc='best')
plt.xlabel("YEARS")
plt.ylabel("NO OF CASES")
plt.show()
plt.tight_layout()

# Number of Rape Cases recorded Statewise

crime.groupby('STATE/UT')['Rape'].sum().sort_values(ascending=False).plot(kind='bar',color=['#2ECCFA','#9AFE2E','#FA58D0','#2EFEC8','#F4FA58','#170B3B'],figsize=(12,8))
plt.title(" Rape cases recorded in Statewise")
plt.xlabel("States")
plt.ylabel("The Sum of the rape cases")
plt.show()

# Comparison of Rape and Kidnapping\Abduction Cases recorded Statewise[heads35]

grouped_data = crime.groupby('STATE/UT')['Rape','Kidnapping and Abduction'].sum().head(30)


plt.figure(figsize=(20, 10))
grouped_data.plot(kind='bar', stacked=True, edgecolor='magenta')
plt.xlabel('States/UT')
plt.ylabel('Total Cases')
plt.title('Stacked Bar Chart by State')
plt.xticks(rotation=90)
plt.legend(title='Crime Type', loc='best')
plt.tight_layout()
plt.show()

# Number of Dowry Death Cases recorded Statewise

sunset_palette=sns.color_palette("pastel", n_colors=10)
crime.groupby('STATE/UT')['Dowry Deaths'].sum().sort_values(ascending=False).plot(kind='bar',color=sunset_palette,figsize=(12,8))
plt.title(" Dowry Deaths cases recorded in Statewise")
plt.xlabel("States")
plt.ylabel("The Sum of the Dowry Deaths cases")
plt.show()

# Comparison of Dowry and Assault Cases recorded Statewise[heads 35]

grouped_data = crime.groupby('STATE/UT')['Dowry Deaths', 'Assault on women with intent to outrage her modesty'].sum().head(35)
plt.figure(figsize=(20, 10))
grouped_data.plot(kind='bar', stacked=True, edgecolor='black')
plt.xlabel('crime cases')
plt.ylabel('Total Cases')
plt.title('Stacked Bar Chart for Rape and Dowry Deaths by State')
plt.xticks(rotation=90)
plt.legend(title='Crime Type')
plt.tight_layout()
plt.show()

# Number of Kidnapping and Abduction Cases recorded Yearwise

sunset_palette=sns.color_palette("muted", n_colors=10)
crime.groupby('Year')['Kidnapping and Abduction'].sum().sort_values(ascending=False)\
.plot(kind='bar',color=sunset_palette,figsize=(6,3))
plt.title(" Kidnapping and Abduction' cases recorded Yearwise")
plt.xlabel("States")
plt.ylabel("The Sum of the Dowry cases")
plt.show()

# Number of Assault on women with intent to outrage her modesty Cases recorded Yearwise

crime.groupby('Year')['Assault on women with intent to outrage her modesty'].sum().sort_values(ascending=False)\
.plot(kind='bar',color=['#2ECCFA','#9AFE2E','#FA58D0','#2EFEC8','#F4FA58','#170B3B'],figsize=(6,3))
plt.title(" Assault on women with intent to outrage her modesty Cases recorded Yearwise")
plt.xlabel("States")
plt.ylabel("The Sum of the Dowry cases")
plt.show()

# Correlation Plot

state_rape=crime.groupby('STATE/UT')['Rape'].sum().sort_values(ascending=False)
state_kid=crime.groupby('STATE/UT')['Kidnapping and Abduction'].sum().sort_values(ascending=False)
state_dowry=crime.groupby('STATE/UT')['Dowry Deaths'].sum().sort_values(ascending=False)

plt.figure(figsize=(8,3))
plt.scatter(state_rape,state_kid,label='correlation between Rape Cases and Kidnapping Cases')
plt.scatter(state_rape,state_dowry,label="Correlation between Rape Cases and Dowry Cases")
plt.scatter(state_kid,state_dowry,label="Corelation betweeen Kidnapping Cases and Dowry Cases ")


plt.title("State Wise Cases")
plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))
plt.show()
plt.tight_layout()

# Heatmap

tc=crime.corr()
plt.figure(figsize=(10,5))
sns.heatmap(tc,annot=True)

# Pairplot

sns.pairplot(crime, hue='STATE/UT')

# Pie Chart

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
crime= pd.read_csv('C:\\Users\\nainc\\OneDrive\\Desktop\\crimes_against_women_2001-2014.csv')
n = 20

for i in range(n):

 patches, texts = plt.pie(crime.groupby('STATE/UT')['Kidnapping and Abduction'].sum(),
   startangle=90,
   )

plt.legend(crime,loc='center left', bbox_to_anchor=(1.5, 0.1))

plt.show()

n = 20
top_n_states = crime.groupby('STATE/UT')['Kidnapping and Abduction'].sum().nlargest(n)
fig, axes = plt.subplots(nrows=5, ncols=4, figsize=(15, 20))
axes = axes.flatten()
for i, (state, count) in enumerate(top_n_states.items()):
 
    state_data = crime[crime['STATE/UT'] == state]
    total_crimes = state_data[['Rape', 'Dowry Deaths', 'Assault on women with intent to outrage her modesty',
                               'Insult to modesty of Women', 'Cruelty by Husband or his Relatives',
                               'Importation of Girls']].sum().sum()
   
    percentages = (state_data[['Rape', 'Dowry Deaths', 'Assault on women with intent to outrage her modesty',
                               'Insult to modesty of Women', 'Cruelty by Husband or his Relatives',
                               'Importation of Girls']].sum() / total_crimes) * 100
    wedges, texts, autotexts = axes[i].pie(percentages, labels=percentages.index,
                                          colors=sns.color_palette('pastel'), startangle=90, autopct='%.1f%%')
    axes[i].set_title(state)
    for autotext in autotexts:
        autotext.set_fontsize(8)
plt.tight_layout()

plt.show()

# Boxplot

crime = pd.read_csv('C:\\Users\\nainc\\OneDrive\\Desktop\\crimes_against_women_2001-2014.csv')
columns_to_plot = ['Rape', 'Dowry Deaths', 'Assault on women with intent to outrage her modesty',
                   'Insult to modesty of Women', 'Cruelty by Husband or his Relatives', 'Importation of Girls']
plt.figure(figsize=(10, 6))
sns.boxplot(data=crime[columns_to_plot], palette="pastel")
plt.xlabel('Crime Type')
plt.ylabel('Number of Cases')
plt.title('Boxplot')
plt.xticks(ticks=range(len(columns_to_plot)), labels=columns_to_plot, rotation=45)
plt.tight_layout()
plt.show()

# Scatterplot

import_data = crime['Year']
cruelty_data = crime['Dowry Deaths']
plt.figure(figsize=(8, 6))
plt.scatter(import_data, cruelty_data, alpha=0.7, color='blue')
plt.xlabel('Cases of Dowry')
plt.ylabel('Cases of Cruelty against women')
plt.title('Relationship between Import and Cruelty')
plt.grid(True)
plt.tight_layout()
plt.show()

crime_types = ['Rape','Dowry Deaths','Assault on women with intent to outrage her modesty','Insult to modesty of Women','Cruelty by Husband or his Relatives','Importation of Girls']
fig, axes = plt.subplots(nrows=len(crime_types), ncols=1, figsize=(8, 6 * len(crime_types)), sharex=True)

for i, crime_type in enumerate(crime_types):
    axes[i].scatter(crime['Year'], crime[crime_type], alpha=0.7, label=crime_type)
    axes[i].set_ylabel(crime_type)
    axes[i].legend(loc='upper right')

axes[-1].set_xlabel('Year')


plt.tight_layout()

plt.show()

